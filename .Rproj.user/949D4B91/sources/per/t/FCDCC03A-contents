#Below we scrape tide data from seeker.gg
Website <- read_html("https://seeker.gg/Tides") |> html_table()#Grabs data from Seeker.gg

Today_Table <- Website |>
  pluck(1) |>
  Clean_Tide_Tables()    #Today data
  
Tomorrow_Table <- Website |>
  pluck(2)|> 
  Clean_Tide_Tables() |>
  mutate(times = times + hours(24))   #Tomorrows data

#Option here to add on many more days (possibly stopping at a week) but so far can only do it manually as above, could write a function to pluck(x+n) and then add hours (24*(n-1))

Tide_Table <- rbind(Today_Table , Tomorrow_Table)





#Tide_Index<-match(min(abs(period_to_seconds(ClimbTime-Times))),abs(period_to_seconds(ClimbTime-Times))) #Finds the closest tide to when you are looking to climb

#Tide_Index_Second<-match(min(abs(period_to_seconds(ClimbTime + ClimbDuration-Times[-Tide_Index]))),abs(period_to_seconds(ClimbTime+ClimbDuration-Times))) #Gets second closest time

#ifelse(Tide_Index-Tide_Index_Second>1,"Must use All Seasons", "OK") #Notic this check!!!

#Tqde_Table <- data.frame(Time=Times, Tide=Tides, Tide_State=Tide_States) |> mutate(Tide =  as.numeric(Tide))

