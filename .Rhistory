t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos(t/ (2*tstep) * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 0:200000, minor_breaks = FALSE) +
theme_bw()
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos(t/ (2*t2-t1) * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 0:200000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t/(t2-t1))/ 2 * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 0:200000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos(t/2(t2-t1) * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 0:200000, minor_breaks = FALSE) +
theme_bw()
times <- (Tide_Table)[-4] %>% as_tibble()
times
times %>% mutate(test = times-min(times))
times %>% mutate(test = times$times-min(times$times))
times %>% mutate(test = times$times-min(period_to_seconds(times$times)))
times %>% mutate(test = period_to_seconds(times$times)-min(period_to_seconds(times$times)))
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos(t/2(period_to_seconds(t2)-period_to_seconds(t1)) * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 0:200000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/2(period_to_seconds(t2)-period_to_seconds(t1)) * 2 * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 360) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/(period_to_seconds(t2)-period_to_seconds(t1)) * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 3600) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/(period_to_seconds(t2)-period_to_seconds(t1)) * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 900) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/(period_to_seconds(t2)-period_to_seconds(t1)) * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 900) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/(period_to_seconds(t2)-period_to_seconds(t1)) * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
gen_points <- function(h1, h2, t1, t2, tstep = 60) {
# this whole function is very hard coded for the above data structure
offset <- 0.75^(h2 < h1) - 1
output <- tibble(
t = seq(period_to_seconds(t1), period_to_seconds(t2), tstep),
h =  0.5 * (h2 - h1) * cos((t-period_to_seconds(t1))/(period_to_seconds(t2)-period_to_seconds(t1)) * pi - pi) + 0.5*(h1 + h2)
)
output
}
data_to_points <- function(tide_times) {
tide_times |>
mutate(next_time = lead(times),
next_state = lead(state),
next_height = lead(tides)) |>
filter(!is.na(next_time)) |>
mutate(points = pmap(list(tides, next_height, times, next_time),
gen_points)) |>
select(points) |> unnest(points)
}
points <- data_to_points(times)
head(points)
points |>
ggplot(aes(x = t, y = h)) +
geom_line() +
scale_y_continuous(breaks = 1000:20000, minor_breaks = FALSE) +
theme_bw()
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h < 6)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?") %>% View()
points
points %>% View()
points %>% filter(t %in% c(period_to_seconds(times$times )))
points %>% filter(t %in% c(period_to_seconds(times$times ))) %>% unique()
points %>% filter(t %in% c(period_to_seconds(times$times ))) %>% unique() -> test
times
times %>% mutate(secs = period_to_seconds(times))
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 6) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = 0:100000, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):max(points$t), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points %>% mutate(t = t/3600)
points |>
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):max(points$t), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600)
points |>
mutate(t = t/3600)
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):max(points$t), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):max(points$t), minor_breaks = TRUE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):max(points$t), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$t):10, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$h):max(points(h)), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
scale_y_continuous(breaks = min(points$h):max(points$h, minor_breaks = FALSE) +
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$h):max(points$h), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$h):max(points$h), minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$h):max(points$h)+0.2, minor_breaks = FALSE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
max(points$h)
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = min(points$h):max(points$h), minor_breaks = TRUE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
min(points$h)
max(points$h)
points |>
mutate(t = t/3600) %>%
ggplot(aes(x = t, y = h)) +
geom_hline(yintercept = 5) +
geom_line() +
geom_point(aes(colour = h > 5)) +
scale_y_continuous(breaks = 0:10, minor_breaks = TRUE) +
theme_bw() +
labs(colour = "Can I go Climbing?")
