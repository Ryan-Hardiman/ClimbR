Island_Climbing<-read_rds(paste0(here(),"/data/Island_Climbing.rds"))
#=====
library(here)
source(here("R","functions.R"))
source(here("R","old_data_editing_code.R"))
source(here("R","web_scraping.R"))
source(here("R","app_build"))
Island_Climbing<-read_rds(paste0(here(),"/data/Island_Climbing.rds"))
Island_Climbing
source(here("R","app_build.R"))
install.packages("eaflet")
install.packages("leaflet")
install.packages(c("shinyWidgets", "shinycssloaders"))
shiny::runApp("R/")
#Desired climb time
ClimbTime <- hm("06:00")
library(hms)
library(lubridate)
#Desired climb time
ClimbTime <- hm("06:00")
ClimbDuration <- hm("10:00")
#=====
library(here)
source(here("R","functions.R"))
source(here("R","old_data_editing_code.R"))
source(here("R","web_scraping.R"))
source(here("R","app_build.R"))#<--- Used for ShinyApp later on when this all works
Island_Climbing<-read_rds(paste0(here(),"/data/Island_Climbing.rds"))
Island_Climbing
Island_Climbing |> ggplot(aes(x = Latitide, y = Longitude)) + geom_point()
Island_Climbing |> ggplot(aes(x = Longitude, y = Latitide)) + geom_point()
Island_Climbing |> ggplot(aes(x = Longitude, y = Latitide)) + geom_point() + ggthemes::theme_map()
#====
Map_Gen <- function(area_name = NULL,
climb_name = NULL,
climb_grade = NULL,
hardest_move = NULL,
tide_season = NULL,
tide_height = NULL,
hours_innacessible = NULL,
is_lead = NULL,
is_seconded = NULL) {
FilterList <- Climbing_Filter(Name_Of_Area = area_name,
Climb_Name = climb_name,
Climb_Grade = climb_grade,
Hardest_Move = hardest_move,
Tide_Season = tide_season,
Tide_Height = tide_height,
Hours_Innacessible = hours_innacessible,
Lead = is_lead,
Seconded= is_seconded)
FilteredList_Group_Counted <- left_join(Island_Climbing %>%
filter(`Climb Name` %in% FilterList$`Climb Name` & `Name Of Area` %in% FilterList$`Name Of Area`),
Island_Climbing %>%
filter(`Climb Name` %in% FilterList$`Climb Name` & `Name Of Area` %in% FilterList$`Name Of Area`) %>%
group_by(`Name Of Area`) %>%
summarise(number = n())%>% ungroup())
MyColour <- viridis_pal(option = "C")(nrow(unique(FilteredList_Group_Counted%>%select(number))))
FilteredList_Group_Counted <- merge(FilteredList_Group_Counted%>%
select(number) %>%
unique() %>%
arrange(number) %>%
mutate(id=row_number()),
FilteredList_Group_Counted,
by="number")
pal <- colorFactor(palette = MyColour, domain=FilteredList_Group_Counted$number)
leaflet()%>%
addTiles()%>%
addCircles(data=
FilteredList_Group_Counted,
lat = ~Latitide,
lng = ~Longitude,
radius =
5*1.02^FilteredList_Group_Counted$number,
fillOpacity = 1,
popup = FilteredList_Group_Counted$`Name Of Area`,
color = "black",
#fillColor = "white",
fillColor = MyColour[FilteredList_Group_Counted$id],
weight = 0.0001+1.02^FilteredList_Group_Counted$number,
opacity = 0.9,
stroke=TRUE,
)%>%
addLegend("bottomright",
pal = pal,
values = unique(FilteredList_Group_Counted$number),
title = "# Of Climbs",
labFormat = labelFormat(prefix = ""),
opacity = 1)
}
Island_Climbing %>% select(`Tide Season`, `Tide Height`, `Hours to be inaccesible`) %>% unique()
Island_Climbing
Island_Climbing |> glimpse()
install.packages("golem")
read_xlsx("E3 Area Names.xlsx")
usethis:::use_description()
usethis:::use_description()
